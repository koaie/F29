# H00347035
#
{
# Invalidate tape if the divisor is 0.
((q_0, ^), (q_f, X, 0)),

# Move to the right
((q_0, 1), (q_30, 1, R)),
((q_1, 1), (q_1, 1, R)),

((q_30, 1), (q_30, 1, R)),
((q_30, ^), (q_1, ^, R)),

# Once rightmost go once to the left
((q_1, ^), (q_2, ^, L)),

# Start mod/div, otherwise remove the rightmost unary.
((q_2, ^), (q_7,^,L)),
((q_2, 1), (q_3, ^, L)),

# Move to the leftmost
((q_3, 1), (q_3, 1, L)),
((q_3, ^), (q_4, ^, L)),
((q_4, 1),(q_4, 1, L)),
((q_4, ^),(q_5, ^, L)),
((q_5, 1),(q_5, 1, L)),

# Once leftmost add a unary
((q_5, ^),(q_6, 1, R)),

# Go back to starting pos and repeat
((q_6, 1),(q_6, 1, R)),
((q_6, ^),(q_30, ^, R)),

# Move and set new starting point
((q_7, 1), (q_7, 1, L)),
((q_7, ^), (q_8, ^, L)),
((q_8, 1), (q_8, 1, L)),
((q_8, ^), (q_9, ^, R)),
((q_9, 1), (q_10, 1, 0)),
((q_9, ^), (q_10, ^, R)),

# Start mod/div TM
#  Go to the right
((q_10, 1), (q_11, ^, R)),
((q_10, ^), (q_18, ^, R)),
((q_11, 1), (q_11, 1, R)),
((q_11, ^), (q_12, ^, R)),
((q_12, 1), (q_12, 1, R)),
((q_12, A), (q_12, A, R)),

# Move to the left
((q_12, B), (q_13, B, L)),
((q_12, ^), (q_13, ^, L)),
((q_13, ^), (q_13, ^, L)),
((q_13, A), (q_13, A, L)),

# Replace leftmost unary divisor with A
((q_13, 1), (q_14, A, L)),


((q_14, ^), (q_15, ^, R)),
((q_14, 1), (q_16, 1, L)),
((q_15, A), (q_15, 1, R)),
((q_15, B), (q_15, B, R)),
((q_15, ^), (q_16, B, L)),
((q_16, 1), (q_16, 1, L)),
((q_16, B), (q_16, B, L)),
((q_16, ^), (q_17, ^, L)),
((q_17, 1), (q_17, 1, L)),

# Once X, repeat.
((q_17, ^), (q_10, ^, R)),

# Clean output
((q_18, 1), (q_18, ^, R)),

# If no reminder, set reminder as 0
((q_18, B), (q_18, 1, R)),
((q_18, ^), (q_19, ^, L)),
((q_19, 1), (q_19, 1, L)),
((q_19, ^), (q_f, ^, 0)),

# If Reminder, format output as(R, A)
((q_18, A), (q_20, 1, R)),
((q_20, A), (q_20, 1, R)),
((q_20, B), (q_21, ^, R)),
# If only reminder, go to the left
((q_20, ^), (q_23, ^, L)),

((q_21, B), (q_21, 1, R)),
((q_21, ^), (q_22, 1, L)),
((q_22, 1), (q_22, 1, L)),
((q_22, ^), (q_23, ^, L)),
((q_23, 1), (q_23, 1, L)),
((q_23, ^), (q_f, ^, R)),
}